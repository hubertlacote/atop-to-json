#!/usr/bin/env python3

import argparse
import logging
import os
import sys

from core import atop
from core import common


def load_atop(input_filepath):
    output = []

    logging.info("Loading atop file '{0}'".format(input_filepath))
    since_boot = True
    with open(input_filepath, "r") as f:
        for line in f:
            line = line.strip()
            label = line[0:3]

            if label == "RES":
                since_boot = True

            elif label == "SEP":
                since_boot = False

            else:
                fields = atop.split_line(line)

                if label == "NET":
                    if fields[atop.NET_INTERFACE_FIELD] == "upper":
                        label = "NET-upper"

                if label in atop.MAPPING:
                    headers = atop.MAPPING[label]

                    logging.debug(line)
                    entry = {
                        headers[i]: fields[i]
                        for i in range(0, len(headers))
                        if headers[i] != ""}

                    if len(entry) > 0:
                        entry["label"] = label
                        entry["since_boot"] = since_boot
                        output.append(entry)

    return output


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-i', dest='input_filepath', action='store',
        help="Input atop file (e.g. capture.txt)")
    parser.add_argument(
        '-v', dest='verbose', action='store_true',
        help="Print details")
    args = parser.parse_args()

    if not args.input_filepath:
        parser.print_help(file=sys.stderr)
        sys.exit(1)

    if not os.path.exists(args.input_filepath):
        logging.error("Couldn't find file '{0}'".format(
            args.input_filepath))
        sys.exit(1)

    if args.verbose:
        common.configure(logging.DEBUG)
    else:
        common.configure(logging.INFO)

    output = load_atop(args.input_filepath)

    print(common.prettify(output))
